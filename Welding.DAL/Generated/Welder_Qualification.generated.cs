//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor v4.1.2.0
//     Source:                    https://github.com/msawczyn/EFDesigner
//     Visual Studio Marketplace: https://marketplace.visualstudio.com/items?itemName=michaelsawczyn.EFDesigner
//     Documentation:             https://msawczyn.github.io/EFDesigner/
//     License (MIT):             https://github.com/msawczyn/EFDesigner/blob/master/LICENSE
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Runtime.CompilerServices;

namespace Welding.DAL
{
   public partial class Welder_Qualification
   {
      partial void Init();

      /// <summary>
      /// Default constructor
      /// </summary>
      public Welder_Qualification()
      {
         Datasheets = new System.Collections.Generic.HashSet<global::Welding.DAL.Datasheet>();
         WPQRs = new System.Collections.Generic.HashSet<global::Welding.DAL.WPQR>();

         Init();
      }

      /// <summary>
      /// Public constructor with required data
      /// </summary>
      /// <param name="visual_inspection"></param>
      /// <param name="current_qualification"></param>
      /// <param name="attachment"></param>
      public Welder_Qualification(global::Welding.DAL.Visual_Inspection visual_inspection, global::Welding.DAL.Current_Qualification current_qualification, global::Welding.DAL.Attachment attachment)
      {
         if (visual_inspection == null) throw new ArgumentNullException(nameof(visual_inspection));
         this.Visual_Inspection = visual_inspection;
         visual_inspection.Welder_Qualification.Add(this);

         if (current_qualification == null) throw new ArgumentNullException(nameof(current_qualification));
         this.Current_Qualification = current_qualification;
         current_qualification.Welder_Qualification.Add(this);

         if (attachment == null) throw new ArgumentNullException(nameof(attachment));
         this.Attachment = attachment;
         attachment.Welder_Qualification.Add(this);

         Datasheets = new System.Collections.Generic.HashSet<global::Welding.DAL.Datasheet>();
         WPQRs = new System.Collections.Generic.HashSet<global::Welding.DAL.WPQR>();
         Init();
      }

      /// <summary>
      /// Static create function (for use in LINQ queries, etc.)
      /// </summary>
      /// <param name="visual_inspection"></param>
      /// <param name="current_qualification"></param>
      /// <param name="attachment"></param>
      public static Welder_Qualification Create(global::Welding.DAL.Visual_Inspection visual_inspection, global::Welding.DAL.Current_Qualification current_qualification, global::Welding.DAL.Attachment attachment)
      {
         return new Welder_Qualification(visual_inspection, current_qualification, attachment);
      }

      /*************************************************************************
       * Properties
       *************************************************************************/

      /// <summary>
      /// Identity, Indexed, Required
      /// Unique identifier
      /// </summary>
      [Key]
      [Required]
      [System.ComponentModel.Description("Unique identifier")]
      public long Id { get; set; }

      /*************************************************************************
       * Navigation properties
       *************************************************************************/

      /// <summary>
      /// Required
      /// </summary>
      public virtual global::Welding.DAL.Attachment Attachment { get; set; }

      /// <summary>
      /// Required
      /// </summary>
      public virtual global::Welding.DAL.Current_Qualification Current_Qualification { get; set; }

      public virtual ICollection<global::Welding.DAL.Datasheet> Datasheets { get; private set; }

      /// <summary>
      /// Required
      /// </summary>
      public virtual global::Welding.DAL.Visual_Inspection Visual_Inspection { get; set; }

      public virtual ICollection<global::Welding.DAL.WPQR> WPQRs { get; private set; }

   }
}

