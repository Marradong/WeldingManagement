//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor v4.1.2.0
//     Source:                    https://github.com/msawczyn/EFDesigner
//     Visual Studio Marketplace: https://marketplace.visualstudio.com/items?itemName=michaelsawczyn.EFDesigner
//     Documentation:             https://msawczyn.github.io/EFDesigner/
//     License (MIT):             https://github.com/msawczyn/EFDesigner/blob/master/LICENSE
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Runtime.CompilerServices;

namespace Welding.DAL
{
   public partial class WPS
   {
      partial void Init();

      /// <summary>
      /// Default constructor
      /// </summary>
      public WPS()
      {
         Attachments = new System.Collections.Generic.HashSet<global::Welding.DAL.Attachment>();
         WPS_Run = new System.Collections.Generic.HashSet<global::Welding.DAL.WPS_Run>();

         Init();
      }

      /// <summary>
      /// Public constructor with required data
      /// </summary>
      /// <param name="wpqr"></param>
      /// <param name="wps_request"></param>
      /// <param name="job"></param>
      /// <param name="person"></param>
      public WPS(global::Welding.DAL.WPQR wpqr, global::Welding.DAL.WPS_Request wps_request, global::Welding.DAL.Job job, global::Welding.DAL.Person person)
      {
         if (wpqr == null) throw new ArgumentNullException(nameof(wpqr));
         this.WPQR = wpqr;
         wpqr.WPS.Add(this);

         if (wps_request == null) throw new ArgumentNullException(nameof(wps_request));
         this.WPS_Request = wps_request;
         wps_request.WPS.Add(this);

         if (job == null) throw new ArgumentNullException(nameof(job));
         this.Job = job;
         job.WPS.Add(this);

         if (person == null) throw new ArgumentNullException(nameof(person));
         this.Person = person;
         person.WPS.Add(this);

         Attachments = new System.Collections.Generic.HashSet<global::Welding.DAL.Attachment>();
         WPS_Run = new System.Collections.Generic.HashSet<global::Welding.DAL.WPS_Run>();
         Init();
      }

      /// <summary>
      /// Static create function (for use in LINQ queries, etc.)
      /// </summary>
      /// <param name="wpqr"></param>
      /// <param name="wps_request"></param>
      /// <param name="job"></param>
      /// <param name="person"></param>
      public static WPS Create(global::Welding.DAL.WPQR wpqr, global::Welding.DAL.WPS_Request wps_request, global::Welding.DAL.Job job, global::Welding.DAL.Person person)
      {
         return new WPS(wpqr, wps_request, job, person);
      }

      /*************************************************************************
       * Properties
       *************************************************************************/

      /// <summary>
      /// Identity, Indexed, Required
      /// Unique identifier
      /// </summary>
      [Key]
      [Required]
      [System.ComponentModel.Description("Unique identifier")]
      public long Id { get; set; }

      /*************************************************************************
       * Navigation properties
       *************************************************************************/

      public virtual ICollection<global::Welding.DAL.Attachment> Attachments { get; private set; }

      /// <summary>
      /// Required
      /// </summary>
      public virtual global::Welding.DAL.Job Job { get; set; }

      /// <summary>
      /// Required
      /// </summary>
      public virtual global::Welding.DAL.Person Person { get; set; }

      /// <summary>
      /// Required
      /// </summary>
      public virtual global::Welding.DAL.WPQR WPQR { get; set; }

      /// <summary>
      /// Required
      /// </summary>
      public virtual global::Welding.DAL.WPS_Request WPS_Request { get; set; }

      public virtual ICollection<global::Welding.DAL.WPS_Run> WPS_Run { get; private set; }

   }
}

